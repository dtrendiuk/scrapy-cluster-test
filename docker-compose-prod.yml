version: '3'

services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"

  mongo_seed:
    container_name: mongo_seed
    build: ./mongo_seed
    depends_on:
      - mongo

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "todo_jobs:1:1,done_jobs:1:1"
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper
    depends_on:
      - zookeeper

  scrapyd:
    build:
        context: .
        dockerfile: ./scrapyd/Dockerfile
    container_name: scrapyd

    environment:
        USERNAME: prod
        PASSWORD: yWR_snNHYnLo6A8Csuk!gPFg

        CALLBACK_URL: https://api.sellgo.com/api/scrapy/webhook

        BUCKET_REGION: sfo2
        BUCKET_ACCESS_KEY:
        BUCKET_SECRET_KEY:

        SENTRY_DSN:
        SENTRY_ENABLED: "False"

        KAFKA_HOST: kafka:9092 # separated by semicolon
        KAFKA_SSL: "False"
        MONGODB: "mongodb+srv://scrapycluster:5TE7K0Od4uYMayKt@sellgo.5vgbh.mongodb.net/test"
    depends_on:
      - kafka

  kafka_monitor:
    build:
        context: .
        dockerfile: ./kafka_monitor/Dockerfile

    entrypoint: ["bash", "/code/entrypoint.sh"]
    environment:
        KAFKA_HOST: kafka:9092 # separated by semicolon
        KAFKA_SSL: "False"
        SCRAPYD_HOST: scrapyd:6800
        SCRAPYD_USERNAME: prod
        SCRAPYD_PASSWORD: yWR_snNHYnLo6A8Csuk!gPFg

        SENTRY_DSN: "https://5b8f6d364a8b46cd98a240a7d1e32cba@sentry.io/1501940"
        SENTRY_ENABLED: "True"
        SENTRY_ENVIRONMENT: "Prod"
        MONGODB: "mongodb+srv://scrapycluster:5TE7K0Od4uYMayKt@sellgo.5vgbh.mongodb.net/test"
    depends_on:
      - kafka
      - scrapyd
      - api # Temporary
    volumes:
      - "./kafka_monitor:/code"
      - "./scrapy_project:/scrapy_project"
      - "./wait:/wait"

  api:
    build:
        context: .
        dockerfile: ./api/Dockerfile
    container_name: api
    environment:
      GUNICORN_CMD_ARGS: --reload
      SENTRY_DSN: "https://5b8f6d364a8b46cd98a240a7d1e32cba@sentry.io/1501940"
      SENTRY_ENABLED: "True"
      SENTRY_ENVIRONMENT: "Prod"
      MONGODB: mongo://mongo
      KAFKA_HOST: kafka:9092 # separated by semicolon
      KAFKA_SSL: "Fale"
      MONGODB: "mongodb+srv://scrapycluster:5TE7K0Od4uYMayKt@sellgo.5vgbh.mongodb.net/test"
      SCRAPYD_USERNAME: prod
      SCRAPYD_PASSWORD: yWR_snNHYnLo6A8Csuk!gPFg
    depends_on:
      - kafka
      - mongo
    volumes:
      - "./api/app:/app"
      - "./wait:/wait"

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx_certbot/nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - api

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email admin@sellgo-dev.com --agree-tos --no-eff-email -d itcraft.poshapke.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /var/www/html/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/dhparam
      o: bind

